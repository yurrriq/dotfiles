\subsection{NixOS configuration}

The NiXPS configuration is an expression that takes, at least, \nix{config},
\nix{lib}, and \nix{pkgs}.

<<machines/nixps/configuration.nix>>=
{ lib, pkgs, ... }:
let
  username = "yurrriq";
in
{
  <<Set the location to MSP>>
  <<Blacklist a few kernel modules>>
  <<Configure the LUKS device>>
  <<Configure the environment>>
  <<Configure the file systems>>
  <<Tweak hardware config>>
  <<Configure Bluetooth>>
  <<Configure PulseAudio and OpenGL>>
  <<Configure home-manager>>
  <<Configure networking>>
  <<Configure Nix>>
  <<Configure sudo>>
  <<Configure X Server>>
  <<Configure user>>
  environment.systemPackages = with pkgs; [
    xorg.xbacklight
  ];
}
@

Configure the \hyperref[sec:location]{\nix{location}} \gls{module}.

<<Set the location to MSP>>=
airportCode = "MSP";
@

<<Blacklist a few kernel modules>>=
boot.blacklistedKernelModules = [ "nouveau" "nvidia" "psmouse" ];
@

Configure the \hrefootnote{https://gitlab.com/cryptsetup/cryptsetup/}{\acrshort{luks}} devices.

<<Configure the LUKS device>>=
boot.initrd.luks.devices.root.device = "/dev/nvme0n1p2";
@

Include \bash{~/bin/} in \bash{$PATH}.

<<Configure the environment>>=
environment.homeBinInPath = true;
@

Link some extra paths.

<<Configure the environment>>=
environment.pathsToLink = [
  "/lib/aspell"
  "/share/emacs/site-lisp"
  "/share/fish"
];
@

<<Configure the file systems>>=
fileSystems."/" = {
  device = "/dev/disk/by-uuid/024a1168-9949-4cb2-bbd1-4b19a9d49ef2";
  fsType = "ext4";
};

fileSystems."/boot" = {
  device = "/dev/disk/by-uuid/7574-B246";
  fsType = "vfat";
};

fileSystems."/var/lib/docker/plugins" = {
  device = "/var/lib/docker/plugins";
  fsType = "none";
  options = [ "bind" ];
};

fileSystems."/var/lib/docker/overlay2" = {
  device = "/var/lib/docker/overlay2";
  fsType = "none";
  options = [ "bind" ];
};
@

<<Tweak hardware config>>=
hardware.bumblebee.enable = false;
hardware.nvidiaOptimus.disable = false;
@

<<Configure Bluetooth>>=
services.blueman.enable = true;
hardware.bluetooth = {
  enable = true;
  settings = {
    General = {
      Enable = "Source,Sink,Media,Socket";
    };
  };
};
@

Tweak PulseAudio and OpenGL settings for \hrefootnote{https://store.steampowered.com/linux}{Steam}.

<<Configure PulseAudio and OpenGL>>=
hardware.pulseaudio.support32Bit = true;
hardware.opengl.driSupport32Bit = true;
@

<<Configure home-manager>>=
home-manager.users."${username}" = import ./home.nix;
@

<<Configure networking>>=
networking = {
  firewall = {
    enable = true;
    allowedTCPPortRanges = [
      # { from = 8000; to = 8000; }
    ];
  };
  hostName = "nixps";
  networkmanager.enable = true;
};
@

<<Configure Nix>>=
nix = {
  settings = {
    cores = 8;
    trusted-users = [ "root" username ];
  };
};
@

<<Configure sudo>>=
security.sudo = {
  enable = true;
  extraConfig = ''
    ${username} ALL=(ALL) NOPASSWD: ALL
  '';
};
@

<<Configure X Server>>=
services.xserver = {
  displayManager.autoLogin = {
    enable = true;
    user = username;
  };
  monitorSection = ''
    DisplaySize 508 285
  '';
  dpi = 220;
  upscaleDefaultCursor = true;
  videoDrivers = [ "modesetting" ];
};
@

<<Configure user>>=
users.mutableUsers = false;
users.users."${username}" = {
  name = username;
  hashedPassword = lib.fileContents "/etc/nixos/secrets/${username}.hashedPassword";
  isNormalUser = true;
  extraGroups = [
    "audio"
    "disk"
    "docker"
    "http"
    "networkmanager"
    "systemd-journal"
    "video"
    "wheel"
  ];
  uid = 1000;
  shell = "/etc/profiles/per-user/${username}/bin/fish";
};
@

%% Local Variables:
%% noweb-code-mode: nix-mode
%% End:
