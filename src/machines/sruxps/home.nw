\subsection{home-manager configuration}

<<machines/sruxps/home.nix>>=
{ config, lib, pkgs, ... }:
{
  imports =
    <<Import configs>>
  <<Configure email accounts>>
  <<Configure Docker credentials>>
  <<Configure a convenient high-level .envrc>>
  <<Configure the keyboard>>
  home.packages = with pkgs; [
    <<Install some user packages>>
  ];
  <<Configure picom>>
  <<Miscellaneous config>>
}
@

Exclude the bugwarrior and taskwarrior configs, since I'm not using those tools
at the moment.  Otherwise, import all the configs.  I should probably refactor
these into proper home-manager modules someday.

<<Import configs>>=
let
  inherit (builtins) any attrNames filter match pathExists readDir toPath;
  inherit (lib.strings) hasSuffix;
  resolveConfig = relativePath:
    toPath (../../config + ("/" + relativePath));
  isConfig = path:
    hasSuffix ".nix" path ||
    pathExists (../../config + ("/" + path + "/default.nix"));
  allConfigs =
    map resolveConfig (filter isConfig (attrNames (readDir ../../config)));
  excludes = [
    ".*bugwarrior\\.nix$"
    ".*taskwarrior$"
  ];
in
filter
  (path: !(any (pattern: match pattern path != null) excludes))
  allConfigs;
@

<<Configure email accounts>>=
accounts.email.accounts = {
  personal.address = "eric@ericb.me";
  work = {
    address = "e.bailey@sportradar.com";
    gpg.key = "86BAD22D1F8DBBEC486C49012C32D5C1C17A8045";
    primary = true;
    realName = "Eric Bailey";
  };
};
@

<<Configure Docker credentials>>=
home.file.".docker/config.json".text = ''
  {
      "credHelpers": {
          "docker.io": "pass",
          "gitlab.sportradar.ag:4567": "pass"
      }
  }
'';
@

<<Configure a convenient high-level .envrc>>=
home.file."src/gitlab.sportradar.ag/.envrc".text = ''
  case $(kubectl config current-context) in
      *k8s.srus*|sapi*nov1*)
          export AWS_PROFILE=msp
          ;;
      *)
          export AWS_PROFILE=default
  esac

  export CI_SERVER_HOST=gitlab.sportradar.ag
  export CI_JOB_TOKEN=$(pass "$CI_SERVER_HOST"/token/api)
  export CI_REGISTRY="$CI_SERVER_HOST":4567 \
         CI_REGISTRY_USER=gitlab-ci-token \
         CI_REGISTRY_PASSWORD="$CI_JOB_TOKEN" \
         GITLAB_TOKEN="$CI_JOB_TOKEN" \
         JIRA_API_TOKEN="$(pass jira.sportradar.ag/e.bailey)" \
         JIRA_AUTH_TYPE=bearer
  export GITLAB_REGISTRY_ACCESS_TOKEN="$CI_REGISTRY_PASSWORD"
'';
@

<<Configure the keyboard>>=
home.keyboard = {
  options = [
    "ctrl:nocaps"
    "compose:ralt"
  ];
};
@

\newthought{Install some tools for authenticating} with AWS and Azure.

\begin{itemize}
\item The AWS IAM Authenticator is used for interacting with EKS clusters.
\item EC2 Instance Connect allows you to use your AWS CLI credentials to SSH
  into EC2 instances.
\item AWS Azure Login ...
\item \hrefootnote{https://github.com/yurrriq/naal}{naal} is my tool for
non-interactive AWS Azure login.
\end{itemize}

<<Install some user packages>>=
aws-iam-authenticator
awscli2
python3Packages.ec2instanceconnectcli
@

\newthought{Install some miscellaneous tools.}

\begin{itemize}
\item ...
\item powertop might improve battery life.
\item I haven't used Dhall in a while, but it's still interesting.
\item
  \hrefootnote{https://wireless.wiki.kernel.org/en/users/documentation/iw}{iw}
  is useful for troubleshooting wireless issues, like in Trondheim.
\end{itemize}

<<Install some user packages>>=
bpytop
fd
gomplate
powertop
progress
scc
@

<<*>>=
dhall
dhall-json
iw
@

\newthought{Install some Docker tools.}
\begin{itemize}
\item \fish{docker-credential-pass} for store Docker credentials with \fish{pass}.
\item I might need \hrefootnote{https://docs.docker.com/compose/}{Docker
  Compose} again someday, but not lately. Plus, it doesn't (currently) work with
  Podman.
\end{itemize}
<<Install some user packages>>=
docker-credential-helpers
@

<<*>>=
docker-compose
@

<<Install some user packages>>=
# TODO: podman-compose
@

\newthought{Install some convenient Kubernetes tools.}

<<Install some user packages>>=
krew
kubectl
kubectx
kubelogin
kustomize
lens
stern
@

<<Install some user packages>>=
vault
@

\newthought{Install some tools for testing alert pipelines.}

<<Install some user packages>>=
fortune
prometheus-alertmanager
@

\newthought{Install some miscellaneous GUI programs.}
\begin{itemize}
\item Zoom is annoying but useful.
\item It would be cool to play with \hrefootnote{https://nyxt.atlas.engineer/}{Nyxt}
  some lazy day.
\end{itemize}

<<*>>=
# FIXME
# zoom-us
@

<<*>>=
nyxt
@


\hrefootnote{https://super-productivity.com}{Super Productivity} is a nice tool
for time/work tracking and syncing with Jira.

<<*>>=
super-productivity
@


\todor{Organize this better}

<<Install some user packages>>=
bind
curl
httpie
cachix
nixUnstable
home-manager
nixgl.nixGLIntel
networkmanager
@

<<Configure picom>>=
services.picom = {
  enable = true;
  settings = {
    unredir-if-possible = true;
  };
  vSync = true;
};
@

<<Miscellaneous config>>=
home.sessionPath = [
  "${config.home.homeDirectory}/bin"
];

nix.enable = true;

programs.kitty.settings.font_size = 12;

services.random-background = {
  enable = true;
  imageDirectory = "/usr/share/backgrounds/";
  display = "scale";
};

targets.genericLinux.enable = true;

xresources.properties = {
  "Xft.dpi" = 290;
};
@
