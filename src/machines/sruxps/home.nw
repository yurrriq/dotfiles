\subsection{home-manager configuration}

<<machines/sruxps/home.nix>>=
{ lib, pkgs, ... }:
{
  <<Import various program configs>>
  <<Configure the primary email account>>
  <<Configure Docker credentials>>
  <<Configure a convenient high-level .envrc>>
  home.packages = with pkgs; [
    <<Install some user packages>>
  ];
  <<Configure picom>>
}
@

\todoo{Consider looping here or something}
<<Import various program configs>>=
imports = [
  ../../config/bash.nix
  ../../config/bat.nix
  ../../config/browserpass.nix
  ../../config/bugwarrior.nix
  ../../config/direnv.nix
  ../../config/dunst.nix
  ../../config/emacs
  ../../config/firefox.nix
  ../../config/fish
  ../../config/fzf.nix
  ../../config/git
  ../../config/gpg.nix
  ../../config/htop.nix
  ../../config/jq.nix
  ../../config/kitty.nix
  ../../config/man.nix
  ../../config/password-store.nix
  ../../config/rebar3.nix
  ../../config/starship.nix
  ../../config/taskwarrior
  ../../config/xmonad
];
@

<<Configure the primary email account>>=
accounts.email.accounts.primary = {
  address = "e.bailey@sportradar.com";
  gpg.key = "EFD6F1EDC84D2FA935E38570462054AB8B682702";
  primary = true;
  realName = "Eric Bailey";
};
@

<<Configure Docker credentials>>=
home.file.".docker/config.json".text = ''
  {
      "credHelpers": {
          "docker.io": "pass",
          "gitlab.sportradar.ag:4567": "pass"
      }
  }
'';
@

<<Configure a convenient high-level .envrc>>=
home.file."src/gitlab.sportradar.ag/.envrc".text = ''
  case $(kubectl config current-context) in
      *k8s.srus*|sapi*nov1*)
          export AWS_PROFILE=msp-admin
          ;;
      *)
          export AWS_PROFILE=default
  esac

  export CI_SERVER_HOST=gitlab.sportradar.ag
  export CI_JOB_TOKEN=$(pass "$CI_SERVER_HOST"/token/api)
  export CI_REGISTRY="$CI_SERVER_HOST":4567 \
         CI_REGISTRY_USER=gitlab-ci-token \
         CI_REGISTRY_PASSWORD="$CI_JOB_TOKEN" \
         GITLAB_TOKEN="$CI_JOB_TOKEN"
  export GITLAB_REGISTRY_ACCESS_TOKEN="$CI_REGISTRY_PASSWORD"
'';
@

\newthought{Install some tools for authenticating} with AWS and Azure.

\begin{itemize}
\item The AWS IAM Authenticator is used for interacting with EKS clusters.
\item EC2 Instance Connect allows you to use your AWS CLI credentials to SSH
  into EC2 instances.
\item AWS Azure Login ...
\item \hrefootnote{https://github.com/yurrriq/naal}{naal} is my tool for
non-interactive AWS Azure login.
\end{itemize}

<<Install some user packages>>=
aws-iam-authenticator
awscli
ec2instanceconnectcli
nodePackages.aws-azure-login
naal
@

\newthought{Install some miscellaneous tools.}

\begin{itemize}
\item ...
\item powertop might improve battery life.
\item I haven't used Dhall in a while, but it's still interesting.
\item
  \hrefootnote{https://wireless.wiki.kernel.org/en/users/documentation/iw}{iw}
  is useful for troubleshooting wireless issues, like in Trondheim.
\end{itemize}

<<Install some user packages>>=
bpytop
fd
powertop
progress
renderizer
scc
@

<<*>>=
dhall
dhall-json
iw
@

\newthought{Install some Docker tools.}
\begin{itemize}
\item \fish{docker-credential-pass} for store Docker credentials with \fish{pass}.
\item I might need \hrefootnote{https://docs.docker.com/compose/}{Docker
  Compose} again someday, but not lately. Plus, it doesn't (currently) work with
  Podman.
\end{itemize}
<<Install some user packages>>=
docker-credential-helpers
@

<<*>>=
docker-compose
@

\newthought{Install some convenient Kubernetes tools.}

<<Install some user packages>>=
kubectx
stern
@

\newthought{Install some miscellaneous GUI programs.}
\begin{itemize}
\item Zoom is annoying but useful.
\item It would be cool to play with \hrefootnote{https://nyxt.atlas.engineer/}{Nyxt}
  some lazy day.
\end{itemize}

<<Install some user packages>>=
zoom-us
@

<<*>>=
nyxt
@


\hrefootnote{https://super-productivity.com}{Super Productivity} is a nice tool
for time/work tracking and syncing with Jira.

<<Install some user packages>>=
super-productivity
@

<<Configure picom>>=
services.picom = {
  backend = "xrender";
  refreshRate = 60;
  vSync = true;
};
@
