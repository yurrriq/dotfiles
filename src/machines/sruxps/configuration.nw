\subsection{NixOS configuration}

The SRUXPS configuration is an expression that takes, at least, \nix{config},
\nix{lib}, and \nix{pkgs}.

<<machines/sruxps/configuration.nix>>=
{ config, lib, pkgs, ... }:
let
  username = "e.bailey";
in
{
  <<Set the location to MSP>>
  <<Configure the LUKS devices>>
  <<Configure vm.swappiness>>
  <<Add some kernel modules>>
  <<Link some extra paths>>
  <<Install system-wide packages>>
  <<Configure the file systems>>
  <<Configure Bluetooth>>
  hardware.acpilight.enable = true;
  hardware.opengl.enable = true;
  <<Configure home-manager>>
  <<Configure networking>>
  <<Configure Nix>>
  <<Configure sudo>>
  <<Configure services>>
  <<Configure user>>
}
@

\todoo{Describe the location module}

<<Set the location to MSP>>=
airportCode = "MSP";
@

Configure the \href{https://gitlab.com/cryptsetup/cryptsetup/}{\acrshort{luks}}
devices.

<<Configure the LUKS devices>>=
boot.initrd.luks.devices = {
  cryptkey.device = "/dev/disk/by-uuid/2a44a760-206c-448d-a126-527b8b63f5d0";

  cryptroot = {
    device = "/dev/disk/by-uuid/6cd51820-547b-4378-b566-47f8cdbc46df";
    keyFile = "/dev/mapper/cryptkey";
  };

  cryptswap = {
    device = "/dev/disk/by-uuid/7d80e701-3a6b-4bb0-b8a3-dd5dfb432cdd";
    keyFile = "/dev/mapper/cryptkey";
  };
};
@

\url{https://docs.oracle.com/en/operating-systems/oracle-linux/7/admin/section_h4v_3yt_tr.html}

<<Configure vm.swappiness>>=
boot.kernel.sysctl = {
  "vm.swappiness" = 1;
};
@

<<Add some kernel modules>>=
boot.kernelModules = [
  "coretemp"
  "i915.enable_psr=0"
];
@

<<Link some extra paths>>=
environment.homeBinInPath = true;
environment.pathsToLink = [
  "/lib/aspell"
  "/share/emacs/site-lisp"
  "/share/fish"
  # FIXME: "/share/icons"
];
@

<<Install system-wide packages>>=
environment.systemPackages = with pkgs; [
  fish-kubectl-completions
  kubelogin
];
@

\todoo{btrfs clean boot?}

<<Configure the file systems>>=
fileSystems."/" = {
  device = "/dev/disk/by-uuid/75e8b8ef-8143-4f93-a60b-c5d53adb80d3";
  fsType = "ext4";
  options = [ "noatime" "nodiratime" "discard" ];
};

fileSystems."/boot" = {
  device = "/dev/disk/by-uuid/DF46-7ADE";
  fsType = "vfat";
};
@

<<Configure Bluetooth>>=
hardware.bluetooth = {
  enable = true;
  settings = {
    General = {
      Enable = "Source,Sink,Media,Socket";
    };
  };
};
@

<<Configure home-manager>>=
home-manager.users."${username}" = import ./home.nix;
@

<<Configure networking>>=
networking.hostName = "MSP-EBAILEY01";
networking.interfaces.wlp2s0.useDHCP = true;
networking.useDHCP = false; # NOTE: Deprecated, so set it false.
@

<<Configure Nix>>=
nix = {
  binaryCaches = [
    "https://sportradar.cachix.org"
  ];
  binaryCachePublicKeys = [
    "sportradar.cachix.org-1:6MyCzOfUMeMTxU5QnogkyYOBtr5f5atW/qeS+TjmUfE="
  ];
  trustedUsers = [ "root" username ];
};
@

<<Configure sudo>>=
security.sudo = {
  enable = true;
  extraConfig = ''
    ${username} ALL=(ALL) NOPASSWD: ALL
  '';
};
@

<<Configure services>>=
services.blueman.enable = true;

services.fwupd.enable = true;

services.lorri.enable = false;

services.thermald.enable = lib.mkForce false; # FIXME

services.tlp.enable = true;

services.xserver = {
  config = ''
    Section "Device"
      Identifier  "Intel Graphics"
      Driver      "intel"
      Option      "TearFree"        "true"
      Option      "SwapbuffersWait" "true"
      BusID       "PCI:0:2:0"
    EndSection
  '';

  displayManager.autoLogin = {
    enable = true;
    user = username;
  };

  monitorSection = ''
    DisplaySize 406 228
  '';

  screenSection = ''
    Option         "AllowIndirectGLXProtocol" "off"
    Option         "TripleBuffer" "on"
  '';
};
@

<<Configure user>>=
users.mutableUsers = false;
users.users."${username}" = {
  name = username;
  hashedPassword = lib.fileContents "/etc/nixos/secrets/${username}.hashedPassword";
  isNormalUser = true;
  extraGroups = [
    "audio"
    "disk"
    "docker"
    "http"
    "networkmanager"
    "systemd-journal"
    "video"
    "wheel"
  ];
  uid = 1001;
  shell = "/etc/profiles/per-user/${username}/bin/fish";
};
@

%% Local Variables:
%% noweb-code-mode: nix-mode
%% End:
