\section{Virtualisation}
\label{sec:virtualisation}

<<modules/virtualisation.nix>>=
{ config, lib, pkgs, ... }:
let
  username = lib.head (lib.attrNames config.home-manager.users);
in
{
  environment.systemPackages =
    <<Install crun>> ++
    <<Install virt-manager>>;
  <<Enable dconf>>
  <<Add user to libvirtd group>>
  virtualisation = {
    <<Configure Docker>>
    <<Configure Podman>>
    <<Configure VirtualBox>>
    <<Configure virt-manager>>
  };
}
@

\todoo{Document podman vs dockerd}

\subsection{Docker}

Prefer to disable the Docker daemon.

<<Configure Docker>>=
docker = {
  enable = lib.mkDefault false;
  liveRestore = lib.mkDefault false;
};
@

\subsection{Podman}

It seems there is a bug in podman such that it doesn't properly handle
\bash{~/.config/containers/containers.conf}, so install \bash{crun} system-wide.

\begin{minted}{text}
  WARN[0000] Found default OCIruntime /nix/store/.../bin/crun path which is missing from [engine.runtimes] in containers.conf
\end{minted}

<<Install crun>>=
lib.optionals config.virtualisation.podman.enable [ pkgs.crun ]
@

Install Podman by default, if the Docker daemon is disabled.

<<Configure Podman>>=
podman = {
  enable = lib.mkDefault (!config.virtualisation.docker.enable);
  dockerCompat = lib.mkDefault true;
};
@

\subsection{VirtualBox}

<<Configure VirtualBox>>=
virtualbox.host.enable = lib.mkDefault false;
virtualbox.host.enableExtensionPack = lib.mkDefault (config.virtualisation.virtualbox.host.enable);
@

\subsection{virt-manager}

<<Install virt-manager>>=
lib.optionals config.virtualisation.libvirtd.enable [ pkgs.virt-manager ]
@

<<Configure virt-manager>>=
libvirtd.enable = lib.mkDefault false;
@

<<Enable dconf>>=
programs.dconf.enable = config.virtualisation.libvirtd.enable;
@

<<Add user to libvirtd group>>=
users.users."${username}".extraGroups = [ "libvirtd" ];
@
