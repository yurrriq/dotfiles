\section{NixOS}

This modules manages some common configuration on NixOS systems.

<<modules/nixos.nix>>=
{ lib, pkgs, ... }:

{
  <<Configure boot loader>>
  <<Configure the console font and keyboard settings>>
  <<Configure location>>
  <<Enable networkmanager>>
  <<Configure services>>
  <<Configure audio>>
  system.stateVersion = "23.05";
}
@

Delete all files in \bash{/tmp} during boot, and steal some useful bits from \href{https://github.com/NixOS/nixos-hardware/blob/master/dell/xps/15-9560/xps-common.nix}{\bash{xps-common.nix}}.

<<Configure boot loader>>=
boot = {
  loader.systemd-boot.enable = lib.mkDefault true;
  loader.efi.canTouchEfiVariables = lib.mkDefault true;
  tmp.cleanOnBoot = true;
};
@

Configure the console to use a more legible font, and to use the keymap from the X server keyboard settings.
Notably this means caps lock will behave as I expect (remapped to control).

<<Configure the console font and keyboard settings>>=
console.font = "Lat2-Terminus16";
console.useXkbConfig = true;
@

\todoo{Link/document this}
<<Configure location>>=
location.provider = "manual";
@

Use NetworkManager (intead of WPA Supplicant).

<<Enable networkmanager>>=
networking.networkmanager.enable = true;
@


Hibernate when the laptop lid is closed, mount the Keybase filesystem, enable Redshift, and configure the X server.

<<Configure services>>=
services = {
  logind.lidSwitch = "hibernate";
  kbfs.enable = true;
  redshift = {
    enable = true;
    temperature.night = 2300;
  };
  thermald.enable = lib.mkDefault true;
  <<Configure the X server>>
};
@

Enable the X server, start it automatically,

<<Configure the X server>>=
xserver = {
  enable = true;

  autorun = true;

  <<Configure the display manager>>

  <<Configure libinput>>

  videoDrivers = lib.mkDefault [ "intel" ];

  xkbOptions = "ctrl:nocaps,compose:ralt";
};
@

Enable lightdm as the display manager.

<<Configure the display manager>>=
displayManager = {
  lightdm.enable = true;
  session = [
    <<Configure xmonad as the window manager>>
  ];
};
@

Use \href{https://discourse.nixos.org/t/opening-i3-from-home-manager-automatically/4849}{the workaround described on Discourse} to run xmonad from home-manager.

<<Configure xmonad as the window manager>>=
{
  name = "home-manager";
  manage = "window";
  start = ''
    ${pkgs.runtimeShell} $HOME/.hm-xsession &
    waitPID=$!
  '';
}
@

<<Configure libinput>>=
libinput = {
  enable = true;
  touchpad = {
    accelSpeed = "1.0";
    disableWhileTyping = true;
    naturalScrolling = false;
    tapping = true;
  };
};
@

Enable the PulseAudio soudn server, including extra Bluetooth modules.
Also enable ALSA sound.

<<Configure audio>>=
hardware.pulseaudio = {
  enable = true;
  # FIXME
  # extraModules = [ pkgs.pulseaudio-modules-bt ];
  package = pkgs.pulseaudioFull;
};
sound.enable = true;
@


%% Local Variables:
%% noweb-code-mode: nix-mode
%% End:
